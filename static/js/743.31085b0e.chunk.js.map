{"version":3,"file":"static/js/743.31085b0e.chunk.js","mappings":"kMAgCA,EA5BiB,SAAC,GAA6B,IAA3BA,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,aACzB,OACE,wBACGD,EAAME,KAAI,SAAAC,GAAI,OACb,yBACE,SAAC,KAAD,CACEC,GAAE,kBAAaD,EAAKE,IACpBC,MAAO,CAAEC,KAAMN,GACfO,UAAU,uDAHZ,SAKGL,EAAKM,SANDN,EAAKE,GADD,KAapB,C,2GCYD,EA7BmB,SAAC,GAAkB,IAAhBK,EAAe,EAAfA,SACpB,OACE,iBAAMA,SAAUA,EAAhB,UACE,iBAAKF,UAAU,mBAAf,WACE,kBACEG,KAAK,QACLC,KAAK,OACLJ,UAAU,eACVK,YAAY,mBACZ,aAAW,mBACX,mBAAiB,gBACjBC,UAAQ,KAEV,mBACEN,UAAU,4BACVI,KAAK,SACLP,GAAG,gBAHL,wBAUP,E,0BCoCD,EAxDe,WAAO,IAAD,EACnB,GAAwCU,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0CC,EAAAA,EAAAA,UAAS,MAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,QAAnC,eAAOd,EAAP,KAAciB,EAAd,KAEMC,EAAW,UAAGR,EAAaS,IAAI,gBAApB,QAAgC,GAuBjD,OAZAC,EAAAA,EAAAA,YAAU,WACY,KAAhBF,IAEJD,EAAS,YACTI,EAAAA,EAAAA,GAAU,yBAAD,OAA0BH,EAAYI,SAC5CC,MAAK,SAAAC,GACJR,EAAiBQ,EAAKA,KAAKC,SAC3BR,EAAS,WACV,IACAS,OAAM,SAAAC,GAAG,OAAIV,EAAS,WAAb,IACb,GAAE,CAACC,KAGF,iCACE,gBAAKhB,UAAU,MAAf,UACE,gBAAKA,UAAU,QAAf,UACE,SAAC,EAAD,CAAYE,SAzBH,SAAAwB,GACfA,EAAIC,iBACJZ,EAAS,QAET,IAAMa,EAAQF,EAAIG,OAAOD,MAAME,MAAMV,OAC7BX,EAARmB,EAAwB,CAAEA,MAAAA,GAA2B,CAAC,GACtDF,EAAIG,OAAOD,MAAME,MAAQ,EAC1B,SAqBG,gBAAK9B,UAAU,MAAf,UACE,iBAAKA,UAAU,MAAf,UACa,YAAVF,IAAuB,wCACb,aAAVA,IACC,oEAES,aAAVA,IAC2B,IAAzBe,EAAckB,QACb,wDAC2B,wBAAKf,QAGhC,SAACgB,EAAA,EAAD,CAAUxC,MAAOqB,EAAepB,aAAciB,YAM3D,C,mEC1DKuB,EAAS,CACbC,QAAS,6BACTC,OAAQ,CACNC,QAAS,qCAIAjB,EAAY,SAAAkB,GAAG,OAAIC,EAAAA,EAAAA,IAAUD,EAAKJ,EAAnB,C","sources":["components/FilmList/FilmList.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","services/tmdp_api.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst FilmList = ({ films, fromLocation }) => {\n  return (\n    <ul>\n      {films.map(film => (\n        <li key={film.id}>\n          <Link\n            to={`/movies/${film.id}`}\n            state={{ from: fromLocation }}\n            className=\"link-dark link-opacity-50-hover link-underline-light\"\n          >\n            {film.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nFilmList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  fromLocation: PropTypes.object.isRequired,\n};\n\nexport default FilmList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SearchForm = ({ onSubmit }) => {\n  return (\n    <form onSubmit={onSubmit}>\n      <div className=\"input-group mb-3\">\n        <input\n          name=\"query\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Input movie name\"\n          aria-label=\"Input movie name\"\n          aria-describedby=\"button-addon2\"\n          required\n        />\n        <button\n          className=\"btn btn-outline-secondary\"\n          type=\"submit\"\n          id=\"button-addon2\"\n        >\n          Search\n        </button>\n      </div>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default SearchForm;\n","import FilmList from 'components/FilmList';\nimport SearchForm from 'components/SearchForm';\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchData } from 'services/tmdp_api';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const [searchedFilms, setSearchedFilms] = useState(null);\n  const [state, setState] = useState('idle');\n\n  const searchQuery = searchParams.get('query') ?? '';\n\n  const onSubmit = evn => {\n    evn.preventDefault();\n    setState('idle');\n\n    const query = evn.target.query.value.trim();\n    query ? setSearchParams({ query }) : setSearchParams({});\n    evn.target.query.value = '';\n  };\n\n  useEffect(() => {\n    if (searchQuery === '') return;\n\n    setState('pending');\n    fetchData(`/3/search/movie?query=${searchQuery.trim()}`)\n      .then(data => {\n        setSearchedFilms(data.data.results);\n        setState('resolved');\n      })\n      .catch(err => setState('rejected'));\n  }, [searchQuery]);\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col-6\">\n          <SearchForm onSubmit={onSubmit} />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          {state === 'pending' && <div>Loading...</div>}\n          {state === 'rejected' && (\n            <div>Something Went Wrong, Please Try Again</div>\n          )}\n          {state === 'resolved' &&\n            (searchedFilms.length === 0 ? (\n              <div>\n                No films with this name: <em>{searchQuery}</em>\n              </div>\n            ) : (\n              <FilmList films={searchedFilms} fromLocation={location} />\n            ))}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst config = {\n  baseURL: 'https://api.themoviedb.org',\n  params: {\n    api_key: '0fd0cf460e4f0e3140bd2b4e4b9662b5',\n  },\n};\n\nexport const fetchData = url => axios.get(url, config);\n"],"names":["films","fromLocation","map","film","to","id","state","from","className","title","onSubmit","name","type","placeholder","required","useSearchParams","searchParams","setSearchParams","location","useLocation","useState","searchedFilms","setSearchedFilms","setState","searchQuery","get","useEffect","fetchData","trim","then","data","results","catch","err","evn","preventDefault","query","target","value","length","FilmList","config","baseURL","params","api_key","url","axios"],"sourceRoot":""}