{"version":3,"file":"static/js/474.4de5d426.chunk.js","mappings":"qPA+FA,EA3FiB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SAEhBC,EAOED,EAPFC,MACAC,EAMEF,EANFE,YACAC,EAKEH,EALFG,SACAC,EAIEJ,EAJFI,aACAC,EAGEL,EAHFK,OACAC,EAEEN,EAFFM,aACAC,EACEP,EADFO,QAGF,OACE,iCACE,iBAAKC,UAAU,yBAAf,WACE,gBAAKA,UAAU,SAAf,UACE,gBAAKA,UAAU,eAAf,UACE,gBACEC,IAAG,wCAAmCP,GACtCM,UAAU,uBACVE,IAAG,UAAKT,UAId,iBAAKO,UAAU,mDAAf,WACE,iBAAKA,UAAU,cAAf,WACE,gBAAIA,UAAU,eAAd,UACGP,EADH,KACYG,EAAaO,MAAM,EAAG,GADlC,QAGA,uBAAIJ,QAEN,iBAAKC,UAAU,cAAf,WACE,cAAGA,UAAU,oBAAb,uBACA,uBAAIL,QAGN,4BACE,cAAGK,UAAU,oBAAb,qBACA,uBAAIH,EAAOO,KAAI,SAAAC,GAAI,OAAIA,EAAKC,IAAT,IAAeC,KAAK,WAGzC,4BACE,cAAGP,UAAU,oBAAb,qBACA,cAAGA,UAAU,OAAb,SAAqBF,cAI3B,gBAAKE,UAAU,yBAAf,UACE,gBAAKA,UAAU,MAAf,UACE,gBAAIA,UAAU,QAAd,WACE,yBACE,SAAC,KAAD,CACEA,UAAU,uDACVQ,GAAG,OAFL,qBAOF,yBACE,SAAC,KAAD,CACER,UAAU,uDACVQ,GAAG,UAFL,+BAUR,gBAAKR,UAAU,WAAf,UACE,gBAAKA,UAAU,MAAf,UACE,SAAC,EAAAS,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,YAMX,ECxCD,EAnCqB,WAAO,IAAD,IAEnBC,EAAU,qBADCC,EAAAA,EAAAA,MACWC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAC3C,GAAgCC,EAAAA,EAAAA,UAAS,MAAzC,eAAOvB,EAAP,KAAiBwB,EAAjB,KACA,GAA0BD,EAAAA,EAAAA,UAAS,WAAnC,eAAOF,EAAP,KAAcI,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAWR,OATAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAU,YAAD,OAAaH,IACnBI,MAAK,SAAAC,GACJP,EAAYO,EAAKA,MACjBN,EAAS,WACV,IACAO,OAAM,SAAAC,GAAG,OAAIR,EAAS,WAAb,GACb,GAAE,CAACC,KAGF,iCACE,gBAAKlB,UAAU,MAAf,UACE,gBAAKA,UAAU,MAAf,UACE,SAAC,KAAD,CAAMA,UAAU,kCAAkCQ,GAAIG,EAAtD,UACE,SAAC,MAAD,CAAgBe,KAAM,eAKjB,YAAVb,IAAuB,wCACb,aAAVA,IACC,oEAES,aAAVA,IAAwB,SAAC,EAAD,CAAUrB,SAAUA,MAGlD,C,mECrCKmC,EAAS,CACbC,QAAS,6BACTC,OAAQ,CACNC,QAAS,qCAIAT,EAAY,SAAAU,GAAG,OAAIC,EAAAA,EAAAA,IAAUD,EAAKJ,EAAnB,C","sources":["components/FilmCard/FilmCard.jsx","pages/MovieDetails.jsx","services/tmdp_api.js"],"sourcesContent":["import React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Outlet } from 'react-router-dom';\n\nconst FilmCard = ({ filmData }) => {\n  const {\n    title,\n    poster_path,\n    overview,\n    release_date,\n    genres,\n    vote_average,\n    tagline,\n  } = filmData;\n\n  return (\n    <>\n      <div className=\"row border-bottom py-3\">\n        <div className=\"col-4 \">\n          <div className=\"poster-thumb\">\n            <img\n              src={`http://image.tmdb.org/t/p/w300${poster_path}`}\n              className=\"img-cover img-fluid \"\n              alt={`${title}`}\n            />\n          </div>\n        </div>\n        <div className=\"col-6 d-flex flex-column justify-content-between\">\n          <div className=\"flex-grow-1\">\n            <h3 className=\"fw-bold mb-0\">\n              {title} ({release_date.slice(0, 4)})\n            </h3>\n            <p>{tagline}</p>\n          </div>\n          <div className=\"flex-grow-1\">\n            <p className=\"fw-bold fs-6 mb-0\">Overview</p>\n            <p>{overview}</p>\n          </div>\n\n          <div>\n            <p className=\"fw-bold fs-6 mb-0\">Genres</p>\n            <p>{genres.map(item => item.name).join(' ')}</p>\n          </div>\n\n          <div>\n            <p className=\"fw-bold fs-6 mb-0\">Rating</p>\n            <p className=\"mb-0\">{vote_average}</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"row border-bottom py-3\">\n        <div className=\"col\">\n          <ul className=\"my-0 \">\n            <li>\n              <Link\n                className=\"link-dark link-opacity-50-hover link-underline-light\"\n                to=\"cast\"\n              >\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link\n                className=\"link-dark link-opacity-50-hover link-underline-light\"\n                to=\"reviews\"\n              >\n                Reviews\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div className=\"row py-3\">\n        <div className=\"col\">\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </div>\n      </div>\n    </>\n  );\n};\n\nFilmCard.propTypes = {\n  filmData: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    overview: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    genres: PropTypes.array.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    tagline: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default FilmCard;\n","import React, { useEffect, useState } from 'react';\nimport { IoIosArrowBack } from 'react-icons/io';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport { fetchData } from 'services/tmdp_api';\nimport FilmCard from 'components/FilmCard';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const linkToBack = location.state?.from ?? '/';\n  const [filmData, setFilmData] = useState(null);\n  const [state, setState] = useState('pending');\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchData(`/3/movie/${movieId}`)\n      .then(data => {\n        setFilmData(data.data);\n        setState('resolved');\n      })\n      .catch(err => setState('rejected'));\n  }, [movieId]);\n\n  return (\n    <>\n      <div className=\"row\">\n        <div className=\"col\">\n          <Link className=\"link-dark link-opacity-50-hover\" to={linkToBack}>\n            <IoIosArrowBack size={'30px'} />\n          </Link>\n        </div>\n      </div>\n\n      {state === 'pending' && <div>Loading...</div>}\n      {state === 'rejected' && (\n        <div>Something Went Wrong, Please Try Again</div>\n      )}\n      {state === 'resolved' && <FilmCard filmData={filmData} />}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst config = {\n  baseURL: 'https://api.themoviedb.org',\n  params: {\n    api_key: '0fd0cf460e4f0e3140bd2b4e4b9662b5',\n  },\n};\n\nexport const fetchData = url => axios.get(url, config);\n"],"names":["filmData","title","poster_path","overview","release_date","genres","vote_average","tagline","className","src","alt","slice","map","item","name","join","to","Suspense","fallback","linkToBack","useLocation","state","from","useState","setFilmData","setState","movieId","useParams","useEffect","fetchData","then","data","catch","err","size","config","baseURL","params","api_key","url","axios"],"sourceRoot":""}